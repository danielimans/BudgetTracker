@model ExpenseTracker.Models.ReportViewModel
@using System.Text.Json

@{
    ViewData["Title"] = "Expense Report";
}

<div class="container mt-5">
    <h2>📊 Expense Report</h2>

    <form method="get" class="mb-4">
        <label>Select Month:</label>
        <input type="month" name="month" class="form-control w-auto d-inline-block" value="@Context.Request.Query["month"]" />
        <button type="submit" class="btn btn-primary">View Report</button>
    </form>

    @if (!string.IsNullOrEmpty(Model.SelectedMonth))
    {
        <a class="btn btn-outline-secondary mb-3" asp-controller="Home" asp-action="Dashboard">⬅ Back to Dashboard</a>

        <h4>Report for @Model.SelectedMonth</h4>
        <p><strong>Total Expenses:</strong> RM @Model.TotalExpenses.ToString("F2")</p>

        @if (Model.BudgetLimit.HasValue)
        {
            <p><strong>Budget Limit:</strong> RM @Model.BudgetLimit.Value.ToString("F2")</p>
            <p><strong>Remaining Budget:</strong> RM @Model.RemainingBudget?.ToString("F2")</p>

            @if (Model.IsOverBudget)
            {
                <div class="alert alert-danger fw-bold">
                    ⚠️ You have exceeded your monthly budget!
                </div>
            }
            else
            {
                <div class="alert alert-success">
                    ✅ You are within your budget.
                </div>
            }
        }

        <a class="btn btn-outline-success mb-3"
           asp-action="ExportToPdf"
           asp-route-month="@DateTime.Parse("01 " + Model.SelectedMonth).ToString("yyyy-MM")">
            📄 Download PDF (QuestPDF)
        </a>

        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Category</th>
                    <th>Total Spent (RM)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.CategorySummaries)
                {
                    <tr>
                        <td>@item.Category</td>
                        <td>@item.TotalAmount.ToString("F2")</td>
                    </tr>
                }
            </tbody>
        </table>

        <canvas id="expenseChart" width="250" height="250"></canvas>
    }
    else
    {
        <p>Select a month to generate the report.</p>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('expenseChart').getContext('2d');

        const chart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: @Html.Raw(JsonSerializer.Serialize(Model.CategorySummaries.Select(c => c.Category))),
                datasets: [{
                    label: 'Expenses by Category',
                    data: @Html.Raw(JsonSerializer.Serialize(Model.CategorySummaries.Select(c => c.TotalAmount))),
                    backgroundColor: ['#f94144','#f3722c','#f9c74f','#90be6d','#577590']
                }]
            }
        });
    </script>
}


