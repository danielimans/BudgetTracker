@model ExpenseTracker.Models.Budget

@{
    string monthValue = "";
    if (!string.IsNullOrEmpty(Model?.Month))
    {
        try
        {
            var parsed = DateTime.Parse("01 " + Model.Month);
            monthValue = parsed.ToString("yyyy-MM"); // Format required by <input type="month">
        }
        catch
        {
            monthValue = ""; // fallback in case parsing fails
        }
    }
}

<form asp-action="@ViewData["Action"]" method="post">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @if (Model?.Id > 0)
    {
        <input type="hidden" asp-for="Id" />
    }

    <div class="mb-3">
        <label class="form-label">Month</label>
        <input name="Month" type="month" class="form-control" required value="@monthValue" />
    </div>

    <div class="mb-3">
        <label class="form-label">Type</label>
        <select asp-for="Type" class="form-control" required>
            <option value="Monthly" selected="@(Model.Type == "Monthly")">Monthly</option>
            <option value="Weekly" selected="@(Model.Type == "Weekly")">Weekly</option>
        </select>
    </div>

    <div class="mb-3">
        <label class="form-label">Amount (RM)</label>
        <input asp-for="Amount" class="form-control" type="number" step="0.01" required />
    </div>

    <div class="mb-3">
        <label class="form-label">Notes</label>
        <textarea asp-for="Notes" class="form-control"></textarea>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>



